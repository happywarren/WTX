#dataSourceDefault
db_stock.url = jdbc:mysql://mysql.lt:3306/ltdb?useUnicode=true&characterEncoding=utf8&allowMultiQueries=true&zeroDateTimeBehavior=convertToNull
db_stock.username = stock
db_stock.password = VNidnEPJk7Uc4kyq

#dataSourceScore
db_stock_score.url = jdbc:mysql://mysql.lt:3306/ltdbs?useUnicode=true&characterEncoding=utf8&allowMultiQueries=true
db_stock_score.username = stock
db_stock_score.password = VNidnEPJk7Uc4kyq

#redis_stock
redis_stock.hostName = 121.196.192.185
redis_stock.port = 6379
redis_stock.usePool = true
redis_stock.database = 0
redis_stock.password = cainiu_luckin_15

#redis_stock æ¨¡æç¯å¢
redis_stock.database1 = 1

#redis_stock æ­£å¼ç¯å¢
#redis_stock.hostName1 = 10.51.21.210
#redis_stock.hostName1 = 120.26.116.72

#jms_stock
jms_stock.brokeUrl = tcp://121.196.192.185:61616
jms_stock.userName = system
jms_stock.password = manager


#每个主机允许的连接数（每个主机的连接池大小），当连接池被用光时，会被阻塞住 ，默认为10
mongo.options.connections-per-host=10
mongo.options.threads-allowed-to-block-for-connection-multiplier=20
#在建立（打开）套接字连接时的超时时间（ms），默认为0（无限）
mongo.options.connect-timeout=1000
#套接字超时时间;该值会被传递给Socket.setSoTimeout。默认为0（无限
mongo.options.socket-timeout=1000
#被阻塞线程从连接池获取连接的最长等待时间（ms）
mongo.options.max-wait-time=1000
#控制系统在发生连接错误时是否重试 ，默认为false
mongo.options.auto-connect-retry=false
mongo.options.socket-keep-alive=true

#mongo_stock
mongo_stock_hostName = 121.196.192.185
mongo_stock_port = 27017
mongo_stock_dbname = stocklog